{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/moringa/Development/code/Phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js\";\nimport React, { Component } from \"react\";\nimport BotCollection from './BotCollection';\nimport BotArmy from './YourBotArmy';\nimport BotSpecs from '../components/BotSpecs';\n\nclass BotsPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      botCollection: [],\n      filteredCollection: [],\n      botArmy: [],\n      collectionVisible: true,\n      botSpecs: {}\n    };\n\n    this.addToArmy = bot => {\n      const newCollection = this.state.filteredCollection.filter(card => card.bot_class !== bot.bot_class);\n      this.setState({\n        filteredCollection: newCollection,\n        botArmy: [...this.state.botArmy, bot],\n        collectionVisible: true\n      });\n    };\n\n    this.removeFromArmy = bot => {\n      const newArmy = this.state.botArmy.filter(card => card.id !== bot.id);\n      const armyClasses = newArmy.map(bot => bot.bot_class);\n      const newCollection = this.state.botCollection.filter(bot => {\n        console.log(\"Filter:\", !armyClasses.includes(bot.bot_class));\n        return !armyClasses.includes(bot.bot_class);\n      });\n      console.log(\"newCollection\", newCollection);\n      this.setState({\n        botArmy: newArmy,\n        filteredCollection: newCollection\n      });\n    };\n\n    this.removeBotPermanently = bot => {\n      let newCollection = this.state.botCollection.filter(card => card !== bot);\n      let newFilteredCollection = this.state.filteredCollection.filter(card => card !== bot);\n      let newArmy = this.state.botArmy.filter(card => card !== bot);\n      this.setState({\n        botCollection: newCollection,\n        filteredCollection: newFilteredCollection,\n        botArmy: newArmy\n      });\n      fetch(`http://localhost:6001/bots/${bot.id}`, {\n        method: 'DELETE'\n      }).then(response => response.json()).then(result => console.log(result));\n    };\n\n    this.displayBotSpecs = bot => {\n      this.setState({\n        collectionVisible: false,\n        botSpecs: bot\n      });\n    };\n\n    this.displayBotCollection = () => {\n      this.setState({\n        collectionVisible: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8002/bots').then(response => response.json()).then(bots => this.setState({\n      botCollection: bots,\n      filteredCollection: bots\n    })).then(console.log(\"Bots Fetched!\"));\n  }\n\n  render() {\n    const {\n      filteredCollection,\n      botArmy,\n      botSpecs,\n      collectionVisible\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BotArmy, {\n        bots: botArmy,\n        action: this.removeFromArmy,\n        removeCard: this.removeBotPermanently\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), collectionVisible ? /*#__PURE__*/_jsxDEV(BotCollection, {\n        botCollection: filteredCollection,\n        action: this.displayBotSpecs,\n        removeCard: this.removeBotPermanently\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(BotSpecs, {\n        bot: botSpecs,\n        back: this.displayBotCollection,\n        enlist: this.addToArmy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BotsPage;","map":{"version":3,"sources":["/home/moringa/Development/code/Phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"names":["React","Component","BotCollection","BotArmy","BotSpecs","BotsPage","state","botCollection","filteredCollection","botArmy","collectionVisible","botSpecs","addToArmy","bot","newCollection","filter","card","bot_class","setState","removeFromArmy","newArmy","id","armyClasses","map","console","log","includes","removeBotPermanently","newFilteredCollection","fetch","method","then","response","json","result","displayBotSpecs","displayBotCollection","componentDidMount","bots","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport BotCollection from './BotCollection'\nimport BotArmy from './YourBotArmy'\nimport BotSpecs from '../components/BotSpecs'\n\nclass BotsPage extends Component {\n  state = {\n    botCollection: [],\n    filteredCollection: [],\n    botArmy: [],\n    collectionVisible: true,\n    botSpecs: {},\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8002/bots')\n      .then(response => response.json())\n      .then(bots => this.setState({ botCollection: bots, filteredCollection: bots }))\n      .then(console.log(\"Bots Fetched!\"))\n  }\n\n  addToArmy = (bot) => {\n    const newCollection = this.state.filteredCollection.filter(card => card.bot_class !== bot.bot_class)\n    this.setState({\n      filteredCollection: newCollection,\n      botArmy: [...this.state.botArmy, bot],\n      collectionVisible: true,\n    })\n  }\n\n  removeFromArmy = (bot) => {\n    const newArmy = this.state.botArmy.filter(card => card.id !== bot.id)\n    const armyClasses = newArmy.map(bot => bot.bot_class)\n    const newCollection = this.state.botCollection.filter(bot => {\n      console.log(\"Filter:\", !armyClasses.includes(bot.bot_class))\n      return !armyClasses.includes(bot.bot_class)\n    })\n    console.log(\"newCollection\", newCollection)\n\n    this.setState({ botArmy: newArmy, filteredCollection: newCollection })\n  }\n\n  removeBotPermanently = (bot) => {\n    let newCollection = this.state.botCollection.filter(card => card !== bot)\n    let newFilteredCollection = this.state.filteredCollection.filter(card => card !== bot)\n    let newArmy = this.state.botArmy.filter(card => card !== bot)\n\n    this.setState({ botCollection: newCollection, filteredCollection: newFilteredCollection, botArmy: newArmy })\n\n    fetch(`http://localhost:6001/bots/${bot.id}`, {\n      method: 'DELETE'\n    }).then(response => response.json())\n      .then(result => console.log(result))\n  }\n\n  displayBotSpecs = (bot) => {\n    this.setState({ collectionVisible: false, botSpecs: bot })\n  }\n\n  displayBotCollection = () => {\n    this.setState({ collectionVisible: true })\n  }\n\n  render() {\n    const { filteredCollection, botArmy, botSpecs, collectionVisible } = this.state\n\n    return (\n      <div>\n        <BotArmy\n          bots={botArmy}\n          action={this.removeFromArmy}\n          removeCard={this.removeBotPermanently} />\n        {collectionVisible\n          ? < BotCollection\n            botCollection={filteredCollection}\n            action={this.displayBotSpecs}\n            removeCard={this.removeBotPermanently} />\n          : < BotSpecs\n            bot={botSpecs}\n            back={this.displayBotCollection}\n            enlist={this.addToArmy} />\n        }\n      </div>\n    )\n  }\n}\n\nexport default BotsPage"]},"metadata":{},"sourceType":"module"}